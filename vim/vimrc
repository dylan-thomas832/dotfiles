"
" Dylan Thomas' vimrc
"

" Ensure we are explicit about not using Vi, but Vim!
"
set nocompatible


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Testing 

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"set synmaxcol=200               " only highlight first 200 columns
"set list                        " Show non-printable characters (returns, etc)


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Pathogen must be loaded before filetype call!
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
execute pathogen#infect()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc.
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set history=500                 " how many lines VIM remembers
set report=0                    " always report changed lines
filetype plugin indent on       " load plugins accorinding to filetype
set autoread                    " read when file is changed from outside
let mapleader =","              " set leader for key combos
nnoremap <leader>w :w!<cr>      " fast saving

" :W saves the file using sudo
" command W w !sudo tee % > /dev/null 

" Ignore compiled files
set wildignore=*.o,*~,*.pyc
set wildignore+=*/.git/*,*/.vscode/*,*/.DS_Store

" No annoying sounds
set noerrorbells

" utf8 standard encoding
set encoding=utf8

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Color scheme
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on                       " enable syntax highlighting
set t_Co=256                    " enable 256-color mode.
colorscheme badwolf
"colorscheme molokai            " Looks great with Dracula theme
"set background=dark
set background=light
"colorscheme solarized

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Indentation & Text
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoindent                  " indent according to previous line
"set smartindent                 " Apparently can interfere with filetype stuff
set expandtab                   " use spaces instead of tabs
set tabstop=4                   " visual spaces ber TAB
set softtabstop=4               " tab key indents 4 spaces
set shiftwidth=4                " >> indents 4 spaces
set shiftround                  " >> indents to next multiple of `shiftwidth`

" Linebreak, textwidth, and wordwrap
set linebreak
set textwidth=200
set wrap

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Editing
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set backspace=indent,eol,start  " make backspace work as you would expect
set whichwrap+=<,>,h,l

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set number
set cursorline                  " find current line quickly
set showmode                    " show current mode
set showcmd                     " show already type keys
set scrolloff=7                 " scroll offset to keep cursor visible
set wildmenu                    " command completion help
set ruler                       " Always show position
set cmdheight=2                 " height of command bar
set showmatch                   " show matching [{(
set mat=4                       " tenths of a second to show matching braces
set foldcolumn=1                " Extra margin on left


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Status line
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set display=lastline            " show as much as possible of last line
set laststatus=2                " always show statusline
" Format status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Searching
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set incsearch                   " highlight while search
set hlsearch                    " keep matches highlighted
set wrapscan                    " search wraps around end-of-file
set ignorecase                  " ignore capitalization
set smartcase                   " don't ignore case if contains uppercase letter


" Disable highlight when <leader><cr> is pressed
nnoremap <silent> <leader><cr> :nohlsearch<cr>


" Map <Space> to / (search), and Ctrl-<Space> resp. Use <space> for folding
"nnoremap <space> /
"nnoremap <c-space> ?

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Folding
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set foldenable                  " enables folding
set foldlevelstart=8            " open most folds by default
set foldnestmax=10              " only nest 10 folds
set foldmethod=indent           " fold based on indent`

" Remap fold toggle
nnoremap <space> za

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Graphics
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ttyfast                     " faster redrawing
set lazyredraw                  " only redraw as needed

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Windows
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set hidden                      " switch between buffers w/o having to save
set splitbelow                  " open new windows below current
set splitright                  " open new windoes right of current

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Remappings for movement
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
inoremap jk <Esc>`^             " Remap escape key to 'jk'

" Remap visual line jumps
nnoremap j gj
nnoremap k gk

" Easier movement btwn windows
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-h> <C-W>h
nnoremap <C-l> <C-W>l

" Close current buffer, all buffers resp.
nnoremap <leader>bd :Bclose<cr>:tabclose<cr>gT
nnoremap <leader>ba :bufdo bd<cr>

" Buffer movement (next, prev) resp.
nnoremap <leader>l :bnext<cr>
nnoremap <leader>h :bprevious<cr>

" Tab management (new, keep only, close, move, next)
nnoremap <leader>tn :tabnew<cr>
nnoremap <leader>to :tabonly<cr>
nnoremap <leader>tc :tabclose<cr>
nnoremap <leader>tm :tabmove
nnoremap <leader>t<leader> :tabnext

" Open new tab w/ current buffer path
nnoremap <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

" Switch cwd to directory of open buffer
nnoremap <leader>cd :cd %:p:h<cr>:pwd<cr>

" Return to last edit position when opening files
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Autogroups
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

augroup configgroup
    " Directive clears all autocmds for group
    autocmd!
    " Whitespace removal
    autocmd BufWritePre *.txt,*.js,*.py,*.wiki,*.sh,*.coffee :call CleanExtraSpace()
    " Python
    autocmd FileType python setlocal commentstring=#\ %s
    " Ensure TABs are used in makefiles
    autocmd BufEnter Makefile setlocal noexpandtab 
    autocmd BufEnter makefile setlocal noexpandtab
    autocmd BufEnter *mk setlocal noexpandtab
    " Reset shell script tabbing
    autocmd BufEnter *.sh setlocal tabstop=2
    autocmd BufEnter *.sh setlocal shiftwidth=2
    autocmd BufEnter *.sh setlocal softtabstop=2
augroup end

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Launch config, & plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Requires Ack, Ag be installed & ack.vim loaded
" Set Ack to use Ag
if executable('ag')
    let g:ackprg = 'ag --vimgrep'
endif
" Remap command for searching
nnoremap <leader>a :Ack

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Spell checking
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Pressing ,ss will toggle spell check
nnoremap <leader>ss :setlocal spell!<cr>

" Shortcuts for spell check
nnoremap <leader>sn ]s
nnoremap <leader>sp [s
nnoremap <leader>sa zg
nnoremap <leader>s? z=


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Edit/source vimrc/zshrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <leader>ev :vsp $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>ez :vsp ~/.zshrc<cr>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc. remaps
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Remove Windows ^M - when encodings messed up
nnoremap <leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Toggle paste mode
nnoremap <leader>pp :setlocal paste!<cr>

" highlight last inserted text
nnoremap gV `[v`]

" save session for next time VIM opened (Reopens with "vim -S")
nnoremap <leader>s :makesession<cr>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Put temporary files in same directory
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set backup
set backupdir   =$HOME/.vim/files/backup/
set backupext   =-vimbackup
set backupskip  =
set directory   =$HOME/.vim/files/swap//
set updatecount =100
set undofile
set undodir     =$HOME/.vim/files/undo/
set viminfo     ='100,n$HOME/.vim/files/info/viminfo


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Helper functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Returns true if paste mode is enabled
function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    endif
    return ''
endfunction

" Delete trailing whitespace on save, for filetypes
function! CleanExtraSpaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfunction

command! Bclose call <SID>BufcloseCloseIt()
function! <SID>BufcloseCloseIt()
    let l:currentBufNum = bufnr("%")
    let l:alternateBufNum = bufnr("#")

    if buflisted(l:alternateBufNum)
        buffer #
    else
        bnext
    endif

    if bufnr("%") == l:currentBufNum
        new
    endif

    if buflisted(l:currentBufNum)
        execute("bdelete! ".l:currentBufNum)
    endif
endfunction

function! CmdLine(str)
    call feedkeys(":" . a:str)
endfunction

" Enable local overwrites
let $LOCALFILE=expand("~/.vimrc_local")
if filereadable($LOCALFILE)
    source $LOCALFILE
endif
